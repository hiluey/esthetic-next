generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model agendamentos {
  id              Int       @id @default(autoincrement())
  usuario_id      Int?
  cliente_id      Int?
  servico_id      Int?
  colaborador_id  Int?
  procedimento    String?
  valor           Decimal?
  hora_marcada    String?
  data_hora       DateTime?
  status          agendamentos_status? @default(agendado)
  pago            Boolean?  @default(false)
  criado_em       DateTime? @default(now())

  usuarios_agendamentos_usuario_idTousuarios     usuarios? @relation("agendamentos_usuario_idTousuarios", fields: [usuario_id], references: [id])
  clientes                                       clientes? @relation(fields: [cliente_id], references: [id])
  servicos                                       servicos? @relation(fields: [servico_id], references: [id])
  usuarios_agendamentos_colaborador_idTousuarios usuarios? @relation("agendamentos_colaborador_idTousuarios", fields: [colaborador_id], references: [id])
  pagamentos                                     pagamentos[]

  @@index([cliente_id], map: "agendamentos_cliente_id_idx")
  @@index([colaborador_id], map: "agendamentos_colaborador_id_idx")
  @@index([servico_id], map: "agendamentos_servico_id_idx")
  @@index([usuario_id], map: "agendamentos_usuario_id_idx")
}

model clientes {
  id              Int            @id @default(autoincrement())
  usuario_id      Int?
  nome            String?
  telefone        String?
  email           String?
  data_nascimento DateTime?
  criado_em       DateTime?      @default(now())
  agendamentos    agendamentos[]
  usuarios        usuarios?      @relation(fields: [usuario_id], references: [id], map: "clientes_usuario_id_fk")

  @@index([usuario_id], map: "clientes_usuario_id_idx")
}

model mensagens_marketing {
  id         Int                         @id @default(autoincrement())
  usuario_id Int?
  tipo       mensagens_marketing_tipo?
  texto      String?
  data_envio DateTime?
  status     mensagens_marketing_status? @default(pendente)
  criado_em  DateTime?                   @default(now())
  usuarios   usuarios?                   @relation(fields: [usuario_id], references: [id], map: "mensagens_marketing_usuario_id_fk")

  @@index([usuario_id], map: "mensagens_marketing_usuario_id_idx")
}

model metas_financeiras {
  id         Int                        @id @default(autoincrement())
  usuario_id Int?
  descricao  String?
  valor_meta Decimal?
  periodo    metas_financeiras_periodo?
  atingida   Boolean?                   @default(false)
  criado_em  DateTime?                  @default(now())
  usuarios   usuarios?                  @relation(fields: [usuario_id], references: [id], map: "metas_financeiras_usuario_id_fk")

  @@index([usuario_id], map: "metas_financeiras_usuario_id_idx")
}

model pagamentos {
  id               Int                          @id @default(autoincrement())
  agendamento_id   Int?
  valor            Decimal?
  metodo_pagamento pagamentos_metodo_pagamento?
  data_pagamento   DateTime?                    @default(now())
  status           pagamentos_status?           @default(pendente)
  agendamentos     agendamentos?                @relation(fields: [agendamento_id], references: [id], map: "pagamentos_agendamento_id_fk")

  @@index([agendamento_id], map: "pagamentos_agendamento_id_idx")
}

model produtos {
  id          Int       @id @default(autoincrement())
  usuario_id  Int?
  nome        String?
  estoque     Int?
  validade    DateTime?
  custo       Decimal?
  preco_venda Decimal?
  criado_em   DateTime? @default(now())
  usuarios    usuarios? @relation(fields: [usuario_id], references: [id], map: "produtos_usuario_id_fk")

  @@index([usuario_id], map: "produtos_usuario_id_idx")
}

model relatorios {
  id             Int       @id @default(autoincrement())
  usuario_id     Int?
  tipo_relatorio String?
  dados          Json?
  criado_em      DateTime? @default(now())
  usuarios       usuarios? @relation(fields: [usuario_id], references: [id], map: "relatorios_usuario_id_fk")

  @@index([usuario_id], map: "relatorios_usuario_id_idx")
}

model servicos {
  id              Int       @id @default(autoincrement())
  usuario_id      Int?
  nome            String?
  descricao       String?
  preco           Decimal?
  duracao_minutos Int?
  criado_em       DateTime? @default(now())
  agendamentos    agendamentos[]
  usuarios        usuarios? @relation(fields: [usuario_id], references: [id], map: "servicos_usuario_id_fk")

  @@index([usuario_id], map: "servicos_usuario_id_idx")
}

model usuarios {
  id                                                 Int       @id @default(autoincrement())
  nome                                               String?
  nome_negocio                                       String?
  faturamento_mensal                                 Decimal?
  principais_metas                                   String?
  cor_app                                            String?
  email                                              String?   @unique
  senha_hash                                         String?
  tipo                                               usuarios_tipo? @default(esteticista)
  criado_em                                          DateTime? @default(now())

  agendamentos_agendamentos_usuario_idTousuarios     agendamentos[] @relation("agendamentos_usuario_idTousuarios")
  agendamentos_agendamentos_colaborador_idTousuarios agendamentos[] @relation("agendamentos_colaborador_idTousuarios")
  clientes                                           clientes[]
  mensagens_marketing                                mensagens_marketing[]
  metas_financeiras                                  metas_financeiras[]
  produtos                                           produtos[]
  relatorios                                         relatorios[]
  servicos                                           servicos[]
}

enum StatusMembro {
  active
  inactive
}

model equipe {
  id               Int           @id @default(autoincrement())
  usuario_id       Int?
  nome             String
  email            String        @unique
  funcao           String
  status           StatusMembro  @default(active)
  ultima_atividade DateTime?     @default(now())
  criado_em        DateTime?     @default(now())
}

enum mensagens_marketing_tipo {
  aniversario
  followup
  promocao
  outro
}

enum pagamentos_metodo_pagamento {
  pix
  cartao
  dinheiro
  boleto
  outro
}

enum metas_financeiras_periodo {
  mensal
  semanal
  anual
}

enum usuarios_tipo {
  esteticista
  colaborador
  admin
}

enum pagamentos_status {
  pendente
  confirmado
  cancelado
}

enum mensagens_marketing_status {
  pendente
  enviado
  falha
}

enum agendamentos_status {
  agendado
  realizado
  cancelado
}